#!/bin/bash
# ====================================================================
# DTU Python Diagnostics - Custom Profile Template
# ====================================================================
# Template for creating custom diagnostic profiles
# Copy this file to create your own profile configuration
#
# USAGE:
# 1. Copy this template: cp custom.conf.template my_profile.conf
# 2. Edit the PROFILE_NAME and PROFILE_DESCRIPTION below
# 3. Customize the COMPONENTS array with desired checks
# 4. Run diagnostics with: ./generate_report.sh --profile my_profile.conf
# ====================================================================

# Profile metadata - customize these for your profile
PROFILE_NAME="My Custom Profile"
PROFILE_DESCRIPTION="Custom diagnostic profile for specific needs"

# Component definitions - customize this array
# Format: "Category:Subcategory:script_name:Display Name:repo_path"
# 
# Available components (uncomment the ones you want to include):
COMPONENTS=(
    # Python Components
    # "Python:Installation:python_installation_check:Python Installation Check:Components/Python/Installation/python_installation_check.sh"
    # "Python:Environment:python_environment:Python Environment Configuration:Components/Python/Environment/python_environment.sh" 
    # "Python:Packages:first_year_packages:First Year Required Packages:Components/Python/Packages/first_year_packages.sh"
    
    # Conda Components  
    # "Conda:Installation:conda_installation:Conda Installation Check:Components/Conda/Installation/conda_installation.sh"
    # "Conda:Environments:conda_environments:Conda Environments Check:Components/Conda/Environments/conda_environments.sh"
    
    # Development Tools
    # "Development:Homebrew:homebrew_installation:Homebrew Installation Check:Components/Development/Homebrew/homebrew_installation.sh"
    
    # System Information
    # "System Information:Information:system_info:System Information:Components/System Information/Information/system_info.sh"
    
    # Visual Studio Code Components
    # "Visual Studio Code:Installation:vscode_installation:VS Code Installation Check:Components/Visual Studio Code/Installation/vscode_installation.sh"
    # "Visual Studio Code:Extensions:python_extensions:Python Development Extensions:Components/Visual Studio Code/Extensions/python_extensions.sh"
)

# ====================================================================
# COMPONENT FORMAT EXPLANATION
# ====================================================================
# Each component entry follows this format:
# "Category:Subcategory:script_name:Display Name:repo_path"
#
# - Category: Main grouping (e.g., "Python", "Conda", "Visual Studio Code")
# - Subcategory: Sub-grouping (e.g., "Installation", "Environment", "Packages")
# - script_name: Internal identifier for the diagnostic script
# - Display Name: Human-readable name shown in reports
# - repo_path: Path to the diagnostic script in the repository
#
# Example:
# "Python:Installation:python_installation_check:Python Installation Check:Components/Python/Installation/python_installation_check.sh"
#
# This creates a Python > Installation category with a "Python Installation Check" test
# that runs the script at Components/Python/Installation/python_installation_check.sh
# ====================================================================

# Example minimal profile (uncomment to use):
# COMPONENTS=(
#     "Python:Installation:python_installation_check:Python Installation Check:Components/Python/Installation/python_installation_check.sh"
#     "Visual Studio Code:Installation:vscode_installation:VS Code Installation Check:Components/Visual Studio Code/Installation/vscode_installation.sh"
# )