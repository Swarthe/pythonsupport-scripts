#!/bin/bash

# DTU Python Support main installation
# This runs silently in the background during PKG installation

exec > /tmp/dtu-python-support-install.log 2>&1
exec 2>&1

echo "$(date): Starting DTU Python Support installation..."

# Function to log progress
log_progress() {
    echo "$(date): $1"
    # Also write to a progress file that could be read by a progress dialog
    echo "$1" > /tmp/dtu-python-support-progress.txt
}

# Function to handle errors
handle_error() {
    local error_msg="$1"
    log_progress "ERROR: $error_msg"
    echo "Installation failed: $error_msg" > /tmp/dtu-python-support-error.txt
    exit 1
}

# Set up error handling
trap 'handle_error "Installation interrupted"' INT TERM

log_progress "Initializing DTU Python Support installation..."

# Check if we're running as root (PKG installer should run as root)
if [[ $EUID -ne 0 ]]; then
    handle_error "Installation must run with administrator privileges"
fi

# Get the actual user who launched the installer
ACTUAL_USER="${USER:-$(logname 2>/dev/null || echo $SUDO_USER)}"
if [[ -z "$ACTUAL_USER" || "$ACTUAL_USER" == "root" ]]; then
    # Fallback: get the console user
    ACTUAL_USER=$(stat -f%Su /dev/console)
fi

log_progress "Installing for user: $ACTUAL_USER"

# Switch to user context for the actual installation
log_progress "Step 1/4: Checking system components..."

# Check current system state
HOMEBREW_INSTALLED=false
PYTHON_INSTALLED=false
VSCODE_INSTALLED=false

# Check as the actual user, not root
if sudo -u "$ACTUAL_USER" command -v brew >/dev/null 2>&1; then
    HOMEBREW_INSTALLED=true
    log_progress "âœ“ Homebrew detected"
else
    log_progress "â€¢ Homebrew will be installed"
fi

if sudo -u "$ACTUAL_USER" command -v conda >/dev/null 2>&1 || sudo -u "$ACTUAL_USER" command -v python3 >/dev/null 2>&1; then
    PYTHON_INSTALLED=true
    log_progress "âœ“ Python environment detected"
else
    log_progress "â€¢ Python environment will be installed"
fi

if [[ -d "/Applications/Visual Studio Code.app" ]] || sudo -u "$ACTUAL_USER" command -v code >/dev/null 2>&1; then
    VSCODE_INSTALLED=true
    log_progress "âœ“ Visual Studio Code detected"
else
    log_progress "â€¢ Visual Studio Code will be installed"
fi

log_progress "Step 2/4: Setting up environment..."

# Set up environment for the installation
export HOME="/Users/$ACTUAL_USER"
export USER="$ACTUAL_USER"

# Create a script to run the installation as the user
cat > /tmp/dtu-install-user.sh << 'USERSCRIPT'
#!/bin/bash

# This script runs as the actual user, not root
exec >> /tmp/dtu-python-support-install.log 2>&1

echo "$(date): Running installation as user $(whoami)"

# Load user's shell environment
[[ -f "$HOME/.bash_profile" ]] && source "$HOME/.bash_profile"
[[ -f "$HOME/.zshrc" ]] && source "$HOME/.zshrc" 
[[ -f "$HOME/.profile" ]] && source "$HOME/.profile"

# Function to update progress
log_progress() {
    echo "$(date): $1"
    echo "$1" > /tmp/dtu-python-support-progress.txt
}

log_progress "Step 3/4: Installing Python development environment..."

# Run the DTU Python Support installation script
if /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/dtudk/pythonsupport-scripts/main/MacOS/Components/orchestrators/first_year_students.sh)"; then
    log_progress "âœ“ Installation completed successfully"
    INSTALL_SUCCESS=true
else
    log_progress "âš  Installation completed with warnings"
    INSTALL_SUCCESS=false
fi

log_progress "Step 4/4: Verifying installation..."

# Run diagnostics to verify the installation
if curl -fsSL https://raw.githubusercontent.com/dtudk/pythonsupport-scripts/main/MacOS/Components/Diagnostics/run.sh | bash >/dev/null 2>&1; then
    log_progress "âœ“ All diagnostic tests passed"
    echo "SUCCESS" > /tmp/dtu-python-support-result.txt
else
    log_progress "âš  Some diagnostic tests need attention"
    echo "PARTIAL" > /tmp/dtu-python-support-result.txt
fi

log_progress "Installation process completed"
USERSCRIPT

chmod +x /tmp/dtu-install-user.sh

# Run the installation as the actual user
log_progress "Running installation as user $ACTUAL_USER..."
sudo -u "$ACTUAL_USER" /bin/bash /tmp/dtu-install-user.sh

# Clean up temporary files
rm -f /tmp/dtu-install-user.sh

# Check the result
if [[ -f "/tmp/dtu-python-support-result.txt" ]]; then
    RESULT=$(cat /tmp/dtu-python-support-result.txt)
    case "$RESULT" in
        "SUCCESS")
            log_progress "ðŸŽ‰ DTU Python Support installation completed successfully!"
            ;;
        "PARTIAL") 
            log_progress "DTU Python Support installation completed with some warnings"
            ;;
        *)
            log_progress "DTU Python Support installation finished with unknown status"
            ;;
    esac
else
    log_progress "DTU Python Support installation process finished"
fi

# Create completion notification
cat > /tmp/dtu-python-support-completion.txt << COMPLETION
DTU Python Support Installation Complete

Your Python development environment is now ready for DTU coursework.

What was installed:
â€¢ Homebrew (package manager)
â€¢ Python/Miniconda (Python environment)
â€¢ Visual Studio Code (development environment)
â€¢ Python packages for coursework

Next steps:
1. Open Visual Studio Code
2. Create a new Python file (.py)
3. Start coding!

For help and documentation:
https://github.com/dtudk/pythonsupport-scripts

Installation log available at: /tmp/dtu-python-support-install.log
COMPLETION

echo "$(date): DTU Python Support installation completed"
exit 0
