name: Code Validation

on:
  pull_request:
    branches: [ "main", "dev" ]
  push:
    branches: [ "dev", "main" ]
  workflow_dispatch:

jobs:
  validate-scripts:
    name: Validate Shell Scripts
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck
          
      - name: Run shellcheck on components
        run: |
          find MacOS/Components -name "*.sh" -type f | while read -r file; do
            echo "Checking $file"
            # Use relaxed shellcheck rules for these scripts
            shellcheck -e SC1090,SC1091,SC2034,SC2086,SC2181 "$file" || true
          done
          
      - name: Check script permissions
        run: |
          find MacOS/Components -name "*.sh" -type f | while read -r file; do
            if [ ! -x "$file" ]; then
              echo "⚠️  $file is not executable"
            else
              echo "✓ $file is executable"
            fi
          done

  validate-workflows:
    name: Validate GitHub Actions
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Validate workflow syntax
        run: |
          # Check if workflows are valid YAML
          for workflow in .github/workflows/*.yml; do
            echo "Validating $workflow"
            python3 -c "import yaml; yaml.safe_load(open('$workflow'))" || exit 1
            echo "✓ $workflow is valid YAML"
          done

  check-documentation:
    name: Check Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Check component documentation
        run: |
          # Ensure each component has proper documentation
          components=("Homebrew" "Python" "VSC" "Latex" "Diagnostics")
          for component in "${components[@]}"; do
            if [ -d "MacOS/Components/$component" ]; then
              echo "✓ $component component directory exists"
              
              # Check for install script
              if [ -f "MacOS/Components/$component/install.sh" ]; then
                echo "✓ $component has install.sh"
              else
                echo "⚠️  $component missing install.sh"
              fi
            else
              echo "❌ $component component directory missing"
              exit 1
            fi
          done
          
      - name: Check docs consistency
        run: |
          if [ -f "docs/macos/components.md" ]; then
            echo "✓ Component documentation exists"
            
            # Check if documentation mentions all components
            components=("Homebrew" "Python" "VSC" "Latex" "Diagnostics")
            for component in "${components[@]}"; do
              if grep -q "$component" docs/macos/components.md; then
                echo "✓ $component documented"
              else
                echo "⚠️  $component not mentioned in docs"
              fi
            done
          else
            echo "⚠️  Component documentation missing"
          fi