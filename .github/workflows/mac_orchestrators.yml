name: MacOS Orchestrators Tests

defaults:
  run:
    shell: bash -l {0}

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - 'MacOS/Components/**'
      - '.github/workflows/mac_orchestrators.yml'
  workflow_dispatch:

env:
  PYTHON_VERSION_PS: "3.11"

jobs:
  test-first-year-orchestrator:
    name: Test First Year Orchestrator
    runs-on: macos-latest
    
    steps:
      - name: Clean System
        run: |
          # Remove existing installations
          if command -v brew > /dev/null; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)" || true
          fi
          rm -rf ~/miniconda* ~/anaconda* ~/.conda ~/.condarc || true
          rm -rf "/Applications/Visual Studio Code.app" || true
          rm -rf ~/.vscode* || true

      - name: Run First Year Orchestrator
        env:
          REMOTE_PS: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name || github.repository }}
          BRANCH_PS: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref_name }}
        run: |
          echo "Testing First Year Orchestrator from: $REMOTE_PS/$BRANCH_PS"
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/$REMOTE_PS/$BRANCH_PS/MacOS/Components/orchestrators/first_year_students.sh)"

      - name: Verify Installation
        run: |
          # Source all possible environment files to ensure proper setup
          source ~/.bashrc || true
          source ~/.bash_profile || true
          source ~/.zshrc || true
          
          # Debug: Check what Python version we have
          echo "Python version check:"
          python3 --version || echo "python3 not found"
          which python3 || echo "python3 path not found"
          
          # Debug: Check conda environment
          echo "Conda environment check:"
          which conda || echo "conda not found"
          if command -v conda > /dev/null; then
            conda --version
            conda info --base
            conda info --envs
          fi
          
          # Verify VS Code
          echo "VSCode version check:"
          code --version
          
          # Verify Python version (with more flexibility for orchestrator)
          EXPECTED_VERSION="${{ env.PYTHON_VERSION_PS }}"
          if command -v python3 > /dev/null; then
            INSTALLED_VERSION=$(python3 --version | cut -d " " -f 2)
            if [[ "$INSTALLED_VERSION" != "$EXPECTED_VERSION"* ]]; then
              echo "Warning: Installed Python version ($INSTALLED_VERSION) does not match expected version ($EXPECTED_VERSION)"
              echo "This may be expected in orchestrator testing - checking if packages work anyway"
            else
              echo "✓ Correct Python version $INSTALLED_VERSION is installed"
            fi
          fi
          
          # Verify first-year packages (main requirement)
          echo "Testing first-year packages:"
          python3 -c "import dtumathtools, pandas, scipy, statsmodels, uncertainties; print('✓ All first-year packages imported successfully')" || {
            echo "Package import failed - this is the main requirement for first-year setup"
            exit 1
          }
          
          # Verify VSCode extensions
          echo "VSCode extensions check:"
          code --list-extensions | grep -i python || { echo "Python extension not found"; exit 1; }
          
          echo "✓ First Year Orchestrator verification completed successfully"