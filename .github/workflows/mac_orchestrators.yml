name: MacOS Orchestrators Tests

defaults:
  run:
    shell: bash -l {0}

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - 'MacOS/Components/**'
      - '.github/workflows/mac_orchestrators.yml'
  workflow_dispatch:

# Re-enabled after PKG installer testing completed successfully

env:
  PYTHON_VERSION_PS: "3.11"

jobs:
  test-first-year-orchestrator:
    name: Test First Year Orchestrator
    if: true
    runs-on: macos-latest
    
    steps:
      - name: Run First Year Orchestrator
        env:
          REMOTE_PS: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name || github.repository }}
          BRANCH_PS: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref_name }}
          GITHUB_CI: true
        run: |
          echo "Testing First Year Orchestrator from: $REMOTE_PS/$BRANCH_PS"
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/$REMOTE_PS/$BRANCH_PS/MacOS/Components/orchestrators/first_year_students.sh)"

      - name: Verify VS Code
        run: |
          code --version
          retval=$?
          if [[ $retval -ne 0 ]]; then
            echo "VS Code not installed correctly"
          fi
          exit $retval

      - name: Verify conda
        run: |
          which conda
          retval=$?
          if [[ $retval -ne 0 ]]; then
            echo "Conda not installed correctly"
            exit $retval
          fi

          # Some more output
          conda --version
          conda info --base

      - name: Verify python (${{ env.PYTHON_VERSION_PS }})
        run: |
          which python3

          # Verify the installed Python version - MUST match exactly like legacy script
          EXPECTED_VERSION="${{ env.PYTHON_VERSION_PS }}"
          INSTALLED_VERSION=$(python3 --version | cut -d " " -f 2)
          if [[ "$INSTALLED_VERSION" != "$EXPECTED_VERSION"* ]]; then
            echo "Installed Python version ($INSTALLED_VERSION) does not match expected version ($EXPECTED_VERSION)"
            exit 1
          fi
          echo "Correct Python version $INSTALLED_VERSION is installed."

          # Verify Python package imports - exact same test as legacy
          python3 -c "import dtumathtools, pandas, scipy, statsmodels, uncertainties; print('Packages imported successfully')" || { echo "Failed to import Python packages"; exit 1; }